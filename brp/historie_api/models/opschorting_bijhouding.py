from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from brp.historie_api.models.base_model import Model
from brp.historie_api.models.abstract_datum import AbstractDatum
from brp.historie_api.models.waardetabel import Waardetabel
from brp.historie_api import util

from brp.historie_api.models.abstract_datum import AbstractDatum  # noqa: E501
from brp.historie_api.models.waardetabel import Waardetabel  # noqa: E501

class OpschortingBijhouding(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reden=None, datum=None):  # noqa: E501
        """OpschortingBijhouding - a model defined in OpenAPI

        :param reden: The reden of this OpschortingBijhouding.  # noqa: E501
        :type reden: Waardetabel
        :param datum: The datum of this OpschortingBijhouding.  # noqa: E501
        :type datum: AbstractDatum
        """
        self.openapi_types = {
            'reden': Waardetabel,
            'datum': AbstractDatum
        }

        self.attribute_map = {
            'reden': 'reden',
            'datum': 'datum'
        }

        self._reden = reden
        self._datum = datum

    @classmethod
    def from_dict(cls, dikt) -> 'OpschortingBijhouding':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OpschortingBijhouding of this OpschortingBijhouding.  # noqa: E501
        :rtype: OpschortingBijhouding
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reden(self) -> Waardetabel:
        """Gets the reden of this OpschortingBijhouding.


        :return: The reden of this OpschortingBijhouding.
        :rtype: Waardetabel
        """
        return self._reden

    @reden.setter
    def reden(self, reden: Waardetabel):
        """Sets the reden of this OpschortingBijhouding.


        :param reden: The reden of this OpschortingBijhouding.
        :type reden: Waardetabel
        """

        self._reden = reden

    @property
    def datum(self) -> AbstractDatum:
        """Gets the datum of this OpschortingBijhouding.


        :return: The datum of this OpschortingBijhouding.
        :rtype: AbstractDatum
        """
        return self._datum

    @datum.setter
    def datum(self, datum: AbstractDatum):
        """Sets the datum of this OpschortingBijhouding.


        :param datum: The datum of this OpschortingBijhouding.
        :type datum: AbstractDatum
        """

        self._datum = datum
