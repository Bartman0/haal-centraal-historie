from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from brp.historie_api.models.base_model import Model
from brp.historie_api.models.abstract_datum import AbstractDatum
from brp.historie_api.models.abstract_verblijfplaats_voorkomen import AbstractVerblijfplaatsVoorkomen
from brp.historie_api.models.adressering_binnenland import AdresseringBinnenland
from brp.historie_api.models.locatie_voorkomen_in_onderzoek import LocatieVoorkomenInOnderzoek
from brp.historie_api.models.verblijfadres_locatie import VerblijfadresLocatie
from brp.historie_api.models.waardetabel import Waardetabel
from brp.historie_api import util

from brp.historie_api.models.abstract_datum import AbstractDatum  # noqa: E501
from brp.historie_api.models.abstract_verblijfplaats_voorkomen import AbstractVerblijfplaatsVoorkomen  # noqa: E501
from brp.historie_api.models.adressering_binnenland import AdresseringBinnenland  # noqa: E501
from brp.historie_api.models.locatie_voorkomen_in_onderzoek import LocatieVoorkomenInOnderzoek  # noqa: E501
from brp.historie_api.models.verblijfadres_locatie import VerblijfadresLocatie  # noqa: E501
from brp.historie_api.models.waardetabel import Waardetabel  # noqa: E501

class LocatieVoorkomen(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, datum_van=None, datum_tot=None, functie_adres=None, verblijfadres=None, gemeente_van_inschrijving=None, verblijft_niet_op_adres_vanaf=None, in_onderzoek=None, adressering=None):  # noqa: E501
        """LocatieVoorkomen - a model defined in OpenAPI

        :param type: The type of this LocatieVoorkomen.  # noqa: E501
        :type type: str
        :param datum_van: The datum_van of this LocatieVoorkomen.  # noqa: E501
        :type datum_van: AbstractDatum
        :param datum_tot: The datum_tot of this LocatieVoorkomen.  # noqa: E501
        :type datum_tot: AbstractDatum
        :param functie_adres: The functie_adres of this LocatieVoorkomen.  # noqa: E501
        :type functie_adres: Waardetabel
        :param verblijfadres: The verblijfadres of this LocatieVoorkomen.  # noqa: E501
        :type verblijfadres: VerblijfadresLocatie
        :param gemeente_van_inschrijving: The gemeente_van_inschrijving of this LocatieVoorkomen.  # noqa: E501
        :type gemeente_van_inschrijving: Waardetabel
        :param verblijft_niet_op_adres_vanaf: The verblijft_niet_op_adres_vanaf of this LocatieVoorkomen.  # noqa: E501
        :type verblijft_niet_op_adres_vanaf: AbstractDatum
        :param in_onderzoek: The in_onderzoek of this LocatieVoorkomen.  # noqa: E501
        :type in_onderzoek: LocatieVoorkomenInOnderzoek
        :param adressering: The adressering of this LocatieVoorkomen.  # noqa: E501
        :type adressering: AdresseringBinnenland
        """
        self.openapi_types = {
            'type': str,
            'datum_van': AbstractDatum,
            'datum_tot': AbstractDatum,
            'functie_adres': Waardetabel,
            'verblijfadres': VerblijfadresLocatie,
            'gemeente_van_inschrijving': Waardetabel,
            'verblijft_niet_op_adres_vanaf': AbstractDatum,
            'in_onderzoek': LocatieVoorkomenInOnderzoek,
            'adressering': AdresseringBinnenland
        }

        self.attribute_map = {
            'type': 'type',
            'datum_van': 'datumVan',
            'datum_tot': 'datumTot',
            'functie_adres': 'functieAdres',
            'verblijfadres': 'verblijfadres',
            'gemeente_van_inschrijving': 'gemeenteVanInschrijving',
            'verblijft_niet_op_adres_vanaf': 'verblijftNietOpAdresVanaf',
            'in_onderzoek': 'inOnderzoek',
            'adressering': 'adressering'
        }

        self._type = type
        self._datum_van = datum_van
        self._datum_tot = datum_tot
        self._functie_adres = functie_adres
        self._verblijfadres = verblijfadres
        self._gemeente_van_inschrijving = gemeente_van_inschrijving
        self._verblijft_niet_op_adres_vanaf = verblijft_niet_op_adres_vanaf
        self._in_onderzoek = in_onderzoek
        self._adressering = adressering

    @classmethod
    def from_dict(cls, dikt) -> 'LocatieVoorkomen':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LocatieVoorkomen of this LocatieVoorkomen.  # noqa: E501
        :rtype: LocatieVoorkomen
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this LocatieVoorkomen.


        :return: The type of this LocatieVoorkomen.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this LocatieVoorkomen.


        :param type: The type of this LocatieVoorkomen.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def datum_van(self) -> AbstractDatum:
        """Gets the datum_van of this LocatieVoorkomen.


        :return: The datum_van of this LocatieVoorkomen.
        :rtype: AbstractDatum
        """
        return self._datum_van

    @datum_van.setter
    def datum_van(self, datum_van: AbstractDatum):
        """Sets the datum_van of this LocatieVoorkomen.


        :param datum_van: The datum_van of this LocatieVoorkomen.
        :type datum_van: AbstractDatum
        """

        self._datum_van = datum_van

    @property
    def datum_tot(self) -> AbstractDatum:
        """Gets the datum_tot of this LocatieVoorkomen.


        :return: The datum_tot of this LocatieVoorkomen.
        :rtype: AbstractDatum
        """
        return self._datum_tot

    @datum_tot.setter
    def datum_tot(self, datum_tot: AbstractDatum):
        """Sets the datum_tot of this LocatieVoorkomen.


        :param datum_tot: The datum_tot of this LocatieVoorkomen.
        :type datum_tot: AbstractDatum
        """

        self._datum_tot = datum_tot

    @property
    def functie_adres(self) -> Waardetabel:
        """Gets the functie_adres of this LocatieVoorkomen.


        :return: The functie_adres of this LocatieVoorkomen.
        :rtype: Waardetabel
        """
        return self._functie_adres

    @functie_adres.setter
    def functie_adres(self, functie_adres: Waardetabel):
        """Sets the functie_adres of this LocatieVoorkomen.


        :param functie_adres: The functie_adres of this LocatieVoorkomen.
        :type functie_adres: Waardetabel
        """

        self._functie_adres = functie_adres

    @property
    def verblijfadres(self) -> VerblijfadresLocatie:
        """Gets the verblijfadres of this LocatieVoorkomen.


        :return: The verblijfadres of this LocatieVoorkomen.
        :rtype: VerblijfadresLocatie
        """
        return self._verblijfadres

    @verblijfadres.setter
    def verblijfadres(self, verblijfadres: VerblijfadresLocatie):
        """Sets the verblijfadres of this LocatieVoorkomen.


        :param verblijfadres: The verblijfadres of this LocatieVoorkomen.
        :type verblijfadres: VerblijfadresLocatie
        """

        self._verblijfadres = verblijfadres

    @property
    def gemeente_van_inschrijving(self) -> Waardetabel:
        """Gets the gemeente_van_inschrijving of this LocatieVoorkomen.


        :return: The gemeente_van_inschrijving of this LocatieVoorkomen.
        :rtype: Waardetabel
        """
        return self._gemeente_van_inschrijving

    @gemeente_van_inschrijving.setter
    def gemeente_van_inschrijving(self, gemeente_van_inschrijving: Waardetabel):
        """Sets the gemeente_van_inschrijving of this LocatieVoorkomen.


        :param gemeente_van_inschrijving: The gemeente_van_inschrijving of this LocatieVoorkomen.
        :type gemeente_van_inschrijving: Waardetabel
        """

        self._gemeente_van_inschrijving = gemeente_van_inschrijving

    @property
    def verblijft_niet_op_adres_vanaf(self) -> AbstractDatum:
        """Gets the verblijft_niet_op_adres_vanaf of this LocatieVoorkomen.


        :return: The verblijft_niet_op_adres_vanaf of this LocatieVoorkomen.
        :rtype: AbstractDatum
        """
        return self._verblijft_niet_op_adres_vanaf

    @verblijft_niet_op_adres_vanaf.setter
    def verblijft_niet_op_adres_vanaf(self, verblijft_niet_op_adres_vanaf: AbstractDatum):
        """Sets the verblijft_niet_op_adres_vanaf of this LocatieVoorkomen.


        :param verblijft_niet_op_adres_vanaf: The verblijft_niet_op_adres_vanaf of this LocatieVoorkomen.
        :type verblijft_niet_op_adres_vanaf: AbstractDatum
        """

        self._verblijft_niet_op_adres_vanaf = verblijft_niet_op_adres_vanaf

    @property
    def in_onderzoek(self) -> LocatieVoorkomenInOnderzoek:
        """Gets the in_onderzoek of this LocatieVoorkomen.


        :return: The in_onderzoek of this LocatieVoorkomen.
        :rtype: LocatieVoorkomenInOnderzoek
        """
        return self._in_onderzoek

    @in_onderzoek.setter
    def in_onderzoek(self, in_onderzoek: LocatieVoorkomenInOnderzoek):
        """Sets the in_onderzoek of this LocatieVoorkomen.


        :param in_onderzoek: The in_onderzoek of this LocatieVoorkomen.
        :type in_onderzoek: LocatieVoorkomenInOnderzoek
        """

        self._in_onderzoek = in_onderzoek

    @property
    def adressering(self) -> AdresseringBinnenland:
        """Gets the adressering of this LocatieVoorkomen.


        :return: The adressering of this LocatieVoorkomen.
        :rtype: AdresseringBinnenland
        """
        return self._adressering

    @adressering.setter
    def adressering(self, adressering: AdresseringBinnenland):
        """Sets the adressering of this LocatieVoorkomen.


        :param adressering: The adressering of this LocatieVoorkomen.
        :type adressering: AdresseringBinnenland
        """

        self._adressering = adressering
