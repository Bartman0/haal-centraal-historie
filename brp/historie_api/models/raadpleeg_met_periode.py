from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from brp.historie_api.models.base_model import Model
from brp.historie_api.models.historie_query import HistorieQuery
import re
from brp.historie_api import util

from brp.historie_api.models.historie_query import HistorieQuery  # noqa: E501
import re  # noqa: E501

class RaadpleegMetPeriode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, burgerservicenummer=None, datum_van=None, datum_tot=None):  # noqa: E501
        """RaadpleegMetPeriode - a model defined in OpenAPI

        :param type: The type of this RaadpleegMetPeriode.  # noqa: E501
        :type type: str
        :param burgerservicenummer: The burgerservicenummer of this RaadpleegMetPeriode.  # noqa: E501
        :type burgerservicenummer: str
        :param datum_van: The datum_van of this RaadpleegMetPeriode.  # noqa: E501
        :type datum_van: date
        :param datum_tot: The datum_tot of this RaadpleegMetPeriode.  # noqa: E501
        :type datum_tot: date
        """
        self.openapi_types = {
            'type': str,
            'burgerservicenummer': str,
            'datum_van': date,
            'datum_tot': date
        }

        self.attribute_map = {
            'type': 'type',
            'burgerservicenummer': 'burgerservicenummer',
            'datum_van': 'datumVan',
            'datum_tot': 'datumTot'
        }

        self._type = type
        self._burgerservicenummer = burgerservicenummer
        self._datum_van = datum_van
        self._datum_tot = datum_tot

    @classmethod
    def from_dict(cls, dikt) -> 'RaadpleegMetPeriode':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RaadpleegMetPeriode of this RaadpleegMetPeriode.  # noqa: E501
        :rtype: RaadpleegMetPeriode
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this RaadpleegMetPeriode.


        :return: The type of this RaadpleegMetPeriode.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this RaadpleegMetPeriode.


        :param type: The type of this RaadpleegMetPeriode.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def burgerservicenummer(self) -> str:
        """Gets the burgerservicenummer of this RaadpleegMetPeriode.


        :return: The burgerservicenummer of this RaadpleegMetPeriode.
        :rtype: str
        """
        return self._burgerservicenummer

    @burgerservicenummer.setter
    def burgerservicenummer(self, burgerservicenummer: str):
        """Sets the burgerservicenummer of this RaadpleegMetPeriode.


        :param burgerservicenummer: The burgerservicenummer of this RaadpleegMetPeriode.
        :type burgerservicenummer: str
        """
        if burgerservicenummer is None:
            raise ValueError("Invalid value for `burgerservicenummer`, must not be `None`")  # noqa: E501
        if burgerservicenummer is not None and not re.search(r'^[0-9]{9}$', burgerservicenummer):  # noqa: E501
            raise ValueError(r"Invalid value for `burgerservicenummer`, must be a follow pattern or equal to `/^[0-9]{9}$/`")  # noqa: E501

        self._burgerservicenummer = burgerservicenummer

    @property
    def datum_van(self) -> date:
        """Gets the datum_van of this RaadpleegMetPeriode.

        De begindatum van de periode waarover de resource wordt opgevraagd.   # noqa: E501

        :return: The datum_van of this RaadpleegMetPeriode.
        :rtype: date
        """
        return self._datum_van

    @datum_van.setter
    def datum_van(self, datum_van: date):
        """Sets the datum_van of this RaadpleegMetPeriode.

        De begindatum van de periode waarover de resource wordt opgevraagd.   # noqa: E501

        :param datum_van: The datum_van of this RaadpleegMetPeriode.
        :type datum_van: date
        """
        if datum_van is None:
            raise ValueError("Invalid value for `datum_van`, must not be `None`")  # noqa: E501

        self._datum_van = datum_van

    @property
    def datum_tot(self) -> date:
        """Gets the datum_tot of this RaadpleegMetPeriode.

        De einddatum van de periode waarover de resource wordt opgevraagd.   # noqa: E501

        :return: The datum_tot of this RaadpleegMetPeriode.
        :rtype: date
        """
        return self._datum_tot

    @datum_tot.setter
    def datum_tot(self, datum_tot: date):
        """Sets the datum_tot of this RaadpleegMetPeriode.

        De einddatum van de periode waarover de resource wordt opgevraagd.   # noqa: E501

        :param datum_tot: The datum_tot of this RaadpleegMetPeriode.
        :type datum_tot: date
        """
        if datum_tot is None:
            raise ValueError("Invalid value for `datum_tot`, must not be `None`")  # noqa: E501

        self._datum_tot = datum_tot
